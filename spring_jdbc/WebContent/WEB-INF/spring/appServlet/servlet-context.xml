<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- DBMS와 연동하는 bean(객체) 설정 : DriverManagerDataSource클래스 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/>
		<beans:property name="username" value="scott"/>
		<beans:property name="password" value="tiger"/>
	</beans:bean>

	<!-- Spring JDBC를 사용할 수 있는 객체 - jdbcTemplate -->
	<beans:bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>

	<context:annotation-config/>
	<!-- 컨트롤러를 찾기 위한 노드. -->
	<context:component-scan base-package="kr.co.sist" />
	<!-- 컴포넌트를 찾기 위한 노드 패키지설정. -->
	<context:component-scan base-package="kr.co.sist.dao" />
	<!-- 컴포넌트를 찾기 위한 노드 클래스설정.  -->
	<context:component-scan base-package="kr.co.sist.dao.*" />
	<context:component-scan base-package="kr.co.sist.service" />
	<context:component-scan base-package="kr.co.sist.service.*" />
	
	
	
</beans:beans>

/*
쉬프트연산자 : 
	<<(left): 비트를 왼쪽으로 밀고 빈칸을 항상 0으로 채운다.
	>>(left): 비트를 오른쪽으로 밀고 빈칸을 최상위 부호비트에 따라 양수는 0 음수는 1을 채운다.
	>>>(unsigned): 비트를 오른쪽으로 밀고 항상 0으로 채운다. (양수만 출력된다.)
*/
class Operator3 {
	public static void main(String[] args) {
	
	//메소드 : 스태틱 메소드
	// 클래스명.메소드명(값)
	int i = 11;
	System.out.println(Integer.toBinaryString(i));
	System.out.println(Integer.toOctalString(i));
	System.out.println(Integer.toHexString(i));

	i = 9;
	System.out.println(i + "<<3 = " + (i<<3));
	i = -36;
	System.out.println(i + ">>3 = " + (i>>3));// = 4
	i = 120;
	System.out.println(i + ">>>4 = " + (i>>>4));// = 7

	i = 1;
	System.out.println("int는 4byte 이다. 32번)" + (i<<32));
	System.out.println("int는 4byte 이다. 32번째(최상위 비트에 1이 들어가면 컴퓨터는 음수로 계산) : " + (i<<31));

	i = -1;
	System.out.println(i>>100); //최상위 부호비트 유지

	}
}
